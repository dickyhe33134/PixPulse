
from datetime import datetime
from enum import Enum
from sys import stderr
from sqlmodel import Field, Session, SQLModel, UniqueConstraint, create_engine, select
from datetime import timezone

class UserRoles(Enum):
    admin = "admin"
    user = "user"

class User(SQLModel, table=True):

    __tablename__ = "users"

    #User id generated by Postgres, DO NOT DECLARE
    userid: int | None = Field(default=None, primary_key=True)
    username: str = Field(index=True, unique=True)
    hashed_password: str
    email: str
    phone_no: str | None
    admin: bool
    created_at: datetime | None = Field(default_factory=lambda: datetime.now(timezone.utc))

class Post(SQLModel, table=True):

    __tablename__ = "posts"

    #UUID generated by database. DO NOT DECLARE
    post_id: int | None = Field(default=None, primary_key=True)
    uploader: int = Field(foreign_key="users.userid")
    posturl: str | None
    word_content: str | None